import React, { useEffect, useState } from 'react'
import axios from 'axios'
import { API_URL } from '../api/config'
import { API_URL_DOC } from '../api/config'
import styles from '../styles/EmailHistory.module.css'

function EmailHistory() {
  const [history, setHistory] = useState([]) // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∫ –º–∞—Å—Å–∏–≤
  const [loading, setLoading] = useState(true)
  const [message, setMessage] = useState('')

  useEffect(() => {
    fetchHistory()
  }, [])

  const fetchHistory = () => {
    const token = localStorage.getItem('token') // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ localStorage

    axios
      .get(`${API_URL}get_history.php`, {
        headers: {
          Authorization: `Bearer ${token}`, // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ
        },
      })
      .then((res) => {
        // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ ‚Äî —ç—Ç–æ –º–∞—Å—Å–∏–≤
        setHistory(Array.isArray(res.data) ? res.data : [])
        setLoading(false)
      })
      .catch((err) => {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏—Å—Ç–æ—Ä–∏–∏:', err)
        setMessage('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.')
        setLoading(false)
      })
  }

  const clearHistory = () => {
    if (!window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é?')) return

    const token = localStorage.getItem('token') // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏

    axios
      .post(
        `${API_URL}clear_history.php`,
        {},
        {
          headers: {
            Authorization: `Bearer ${token}`, // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ
          },
        }
      )
      .then((res) => {
        alert(res.data.message)
        fetchHistory()
      })
      .catch((err) => {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ:', err)
        setMessage('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.')
      })
  }

  const formatDate = (dateString) => {
    const date = new Date(dateString)
    return date.toLocaleString() // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å –¥–∞—Ç–æ–π –∏ –≤—Ä–µ–º–µ–Ω–µ–º
  }

  return (
    <div className={styles.container}>
      <h2 className={styles.title}>–ò—Å—Ç–æ—Ä–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø–∏—Å–µ–º</h2>

      <button onClick={clearHistory} className={styles.clearButton}>
        –û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é
      </button>

      {loading ? (
        <p className={styles.loading}>–ó–∞–≥—Ä—É–∑–∫–∞...</p>
      ) : history.length === 0 ? (
        <p className={styles.empty}>–ò—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞—è.</p>
      ) : (
        <table className={styles.table}>
          <thead>
            <tr>
              <th>–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å</th>
              <th>Email –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è</th>
              <th>–¢–µ–º–∞</th>
              <th>–°–æ–æ–±—â–µ–Ω–∏–µ</th>
              <th>Email –ø–æ–ª—É—á–∞—Ç–µ–ª—è</th>
              <th>–î–∞—Ç–∞</th>
              <th>–î–æ–∫—É–º–µ–Ω—Ç(—ã)</th>
            </tr>
          </thead>
          <tbody>
            {history.map((item) => (
              <tr key={item.id}>
                <td>{item.account_name}</td>
                <td>{item.account_email}</td>
                <td>{item.subject}</td>
                <td>{item.message}</td>
                <td>{item.recipient_email}</td>
                <td>{formatDate(item.sent_at)}</td>
                <td>
                  {item.attachment_path
                    ? item.attachment_path.split(',').map((path, index) => (
                        <div key={index}>
                          <a href={`${API_URL_DOC}${path}`} target="_blank" rel="noopener noreferrer" className={styles.fileLink}>
                            üìÑ –î–æ–∫—É–º–µ–Ω—Ç {index + 1}
                          </a>
                        </div>
                      ))
                    : '–ù–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞'}
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      )}

      {message && <p className={styles.message}>{message}</p>}
    </div>
  )
}

export default EmailHistory
